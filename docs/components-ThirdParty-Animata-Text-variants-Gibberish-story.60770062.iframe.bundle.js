"use strict";(self.webpackChunkmeanwhilejs=self.webpackChunkmeanwhilejs||[]).push([[9084],{"./node_modules/class-variance-authority/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function clsx(){for(var e,t,f=0,n="";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}__webpack_require__.d(__webpack_exports__,{F:()=>cva});const falsyToString=value=>"boolean"==typeof value?"".concat(value):0===value?"0":value,cx=clsx,cva=(base,config)=>props=>{var ref;if(null==(null==config?void 0:config.variants))return cx(base,null==props?void 0:props.class,null==props?void 0:props.className);const{variants,defaultVariants}=config,getVariantClassNames=Object.keys(variants).map((variant=>{const variantProp=null==props?void 0:props[variant],defaultVariantProp=null==defaultVariants?void 0:defaultVariants[variant];if(null===variantProp)return null;const variantKey=falsyToString(variantProp)||falsyToString(defaultVariantProp);return variants[variant][variantKey]})),propsWithoutUndefined=props&&Object.entries(props).reduce(((acc,param)=>{let[key,value]=param;return void 0===value||(acc[key]=value),acc}),{}),getCompoundVariantClassNames=null==config||null===(ref=config.compoundVariants)||void 0===ref?void 0:ref.reduce(((acc,param1)=>{let{class:cvClass,className:cvClassName,...compoundVariantOptions}=param1;return Object.entries(compoundVariantOptions).every((param=>{let[key,value]=param;return Array.isArray(value)?value.includes({...defaultVariants,...propsWithoutUndefined}[key]):{...defaultVariants,...propsWithoutUndefined}[key]===value}))?[...acc,cvClass,cvClassName]:acc}),[]);return cx(base,getVariantClassNames,getCompoundVariantClassNames,null==props?void 0:props.class,null==props?void 0:props.className)}},"./src/components/ThirdParty/Animata/Text/variants/Gibberish/story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>story});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),utils=__webpack_require__("./src/lib/utils.tsx"),Letter=function(_a){var letter=_a.letter,className=_a.className,_b=(0,react.useState)(letter.toUpperCase().charCodeAt(0)),code=_b[0],setCode=_b[1];return(0,react.useEffect)((function(){var count=Math.floor(10*Math.random())+5,interval=setInterval((function(){setCode((function(){return Math.floor(26*Math.random())+65})),0===--count&&(setCode(letter.toUpperCase().charCodeAt(0)),clearInterval(interval))}),24);return function(){return clearInterval(interval)}}),[letter]),(0,jsx_runtime.jsx)("span",{className:(0,utils.cn)("whitespace-pre text-foreground",className),children:String.fromCharCode(code)})};function GibberishText(_a){var text=_a.text,className=_a.className;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:text.split("").map((function(letter,index){return(0,jsx_runtime.jsx)(Letter,{className,letter},"".concat(index,"-").concat(letter))}))})}try{GibberishText.displayName="GibberishText",GibberishText.__docgenInfo={description:"Animate each letter in the text using gibberish text effect.\nRenders a random letter first and then animates it to the correct letter.",displayName:"GibberishText",props:{text:{defaultValue:null,description:"The text to animate.",name:"text",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"The class name to apply to each letter.",name:"className",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ThirdParty/Animata/Text/variants/Gibberish/component.tsx#GibberishText"]={docgenInfo:GibberishText.__docgenInfo,name:"GibberishText",path:"src/components/ThirdParty/Animata/Text/variants/Gibberish/component.tsx#GibberishText"})}catch(__react_docgen_typescript_loader_error){}var gibberishVariants=(0,__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs").F)([],{variants:{},defaultVariants:{}});try{gibberishVariants.displayName="gibberishVariants",gibberishVariants.__docgenInfo={description:"",displayName:"gibberishVariants",props:{class:{defaultValue:null,description:"",name:"class",required:!1,type:{name:"ClassValue"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"ClassValue"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ThirdParty/Animata/Text/variants/Gibberish/variants.tsx#gibberishVariants"]={docgenInfo:gibberishVariants.__docgenInfo,name:"gibberishVariants",path:"src/components/ThirdParty/Animata/Text/variants/Gibberish/variants.tsx#gibberishVariants"})}catch(__react_docgen_typescript_loader_error){}const story={component:GibberishText,tags:["autodoc"]};var Default={args:{className:"text-6xl font-black",text:"Hello World"}}}}]);